{"ast":null,"code":"var _jsxFileName = \"C:\\\\Others\\\\msc-pont-admin-website\\\\pont-admin-dashboard\\\\src\\\\components\\\\Settings\\\\Setting.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './SettingsStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Setting = () => {\n  _s();\n  const [blogcategories, setBlogCategories] = useState([]);\n  const [blogcategorydata, setBlogCategoryData] = useState({\n    name: ''\n  });\n  const [projectnameslist, setProjectNameList] = useState([]);\n  const [projectname, setProjectName] = useState({\n    type_name: ''\n  });\n  const [dashboardname, setDashboardName] = useState({\n    name: ''\n  });\n  const [adminEmails, setAdminEmails] = useState([]);\n  const [selectedAdminEmails, setSelectedAdminEmails] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [setting, setSetting] = useState({\n    opptional_dasboard: '',\n    activate_dasboard: false,\n    responsible_emails: ''\n  });\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/category/view/').then(response => setBlogCategories(response.data)).catch(error => console.error('Error fetching Blog categories:', error));\n    axios.get('http://127.0.0.1:8000/api/project-type/views').then(response => setProjectNameList(response.data)).catch(error => console.error('Error fetching project types names:', error));\n    axios.get(`http://127.0.0.1:8000/api/settings/${id}/`).then(response => {\n      setSelectedAdminEmails(response.data.responsible_emails.split(', '));\n      setSetting(response.data);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        setSetting({\n          opptional_dasboard: '',\n          activate_dasboard: false,\n          responsible_emails: ''\n        });\n      } else {\n        console.log('Error fetching settings:', error);\n      }\n    });\n    axios.get('http://127.0.0.1:8000/api/users/emails/').then(response => setAdminEmails(response.data)).catch(error => console.log('Error fetching admin emails:', error));\n  }, [id]);\n  const handleCategoryChanges = e => {\n    setBlogCategoryData({\n      ...blogcategorydata,\n      name: e.target.value\n    });\n  };\n  const handleProjectNameChanges = e => {\n    setProjectName({\n      ...projectname,\n      type_name: e.target.value\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSetting(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleToggleChange = () => {\n    const updatedSetting = {\n      ...setting,\n      activate_dasboard: !setting.activate_dasboard\n    };\n    setSetting(updatedSetting);\n    const url = `http://127.0.0.1:8000/api/settings/${id}/`;\n    axios.put(url, updatedSetting).then(response => {\n      setSetting(response.data);\n      console.log('Dashboard activation status updated successfully');\n    }).catch(error => console.log('Error updating dashboard activation status:', error));\n  };\n  const handleEmailChange = event => {\n    const selectedId = event.target.value;\n    const selectedEmail = adminEmails.find(email => email.id === parseInt(selectedId));\n    if (selectedEmail && !selectedAdminEmails.includes(selectedEmail.email)) {\n      setSelectedAdminEmails([...selectedAdminEmails, selectedEmail.email]);\n      setSetting(prevState => ({\n        ...prevState,\n        responsible_emails: [...selectedAdminEmails, selectedEmail.email].join(', ')\n      }));\n    }\n  };\n  const handleTextareaChange = e => {\n    const updatedEmails = e.target.value.split(', ').map(email => email.trim());\n    setSelectedAdminEmails(updatedEmails);\n    setSetting(prevState => ({\n      ...prevState,\n      responsible_emails: updatedEmails.join(', ')\n    }));\n  };\n  const handleSettingCreate = formData => {\n    const postData = {\n      opptional_dasboard: formData.opptional_dasboard || '',\n      activate_dasboard: formData.activate_dasboard,\n      responsible_emails: formData.responsible_emails || ''\n    };\n    return postData;\n  };\n  const handleSubmit = () => {\n    const url = `http://127.0.0.1:8000/api/settings/${id}/`;\n    axios.get(url).then(response => {\n      axios.put(url, setting).then(response => setSetting(response.data)).catch(error => console.log('Error updating settings:', error));\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        const postData = handleSettingCreate(setting);\n        axios.post(url, postData).then(response => setSetting(response.data)).catch(error => console.log('Error creating settings:', error));\n      } else {\n        console.log('Error fetching settings:', error);\n      }\n    });\n  };\n  const handleSubmitData = (e, type) => {\n    e.preventDefault();\n    if (type === 'category') {\n      axios.post('http://127.0.0.1:8000/api/category/create/', blogcategorydata).then(response => {\n        alert(\"Category created successfully\");\n        setBlogCategoryData({\n          name: ''\n        });\n        setBlogCategories([...blogcategories, response.data]);\n      }).catch(error => {\n        console.error('Error creating Category:', error);\n        alert(\"Error creating Category\");\n      });\n    } else if (type === 'project') {\n      axios.post('http://127.0.0.1:8000/api/project-type/create/', projectname).then(response => {\n        alert(\"Project Name created successfully\");\n        setProjectName({\n          type_name: ''\n        });\n        setProjectNameList([...projectnameslist, response.data]);\n      }).catch(error => {\n        console.error('Error creating Project Name:', error);\n        alert(\"Error creating Project Name\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Insert Category name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Blog_category\",\n            value: blogcategorydata.name,\n            onChange: handleCategoryChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmitData(e, 'category'),\n            className: \"btn-create\",\n            children: \"Create Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-section-list\",\n            children: blogcategories.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-posts\",\n              children: \"No About Page created yet!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this) : blogcategories.map(categories => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: categories.name\n            }, categories.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Insert Projects name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Project_Name\",\n            value: projectname.type_name,\n            onChange: handleProjectNameChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmitData(e, 'project'),\n            className: \"btn-create\",\n            children: \"Create Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-section-list\",\n            children: projectnameslist.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-posts\",\n              children: \"No Project Name created yet!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this) : projectnameslist.map(p_name => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: p_name.type_name\n            }, p_name.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Dashboard Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"opptional_dasboard\",\n            value: setting.opptional_dasboard,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"btn-create\",\n            children: \"Save Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"email-list-title\",\n            children: \"Admin Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"admin\",\n            value: \"\",\n            onChange: handleEmailChange,\n            className: \"dropdown-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), adminEmails.map(adminEmail => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: adminEmail.id,\n              children: adminEmail.email\n            }, adminEmail.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Activate New Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-section-list\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: setting.activate_dasboard,\n                onChange: handleToggleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"email-list-title\",\n            children: \"Selected Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: selectedAdminEmails.join(', '),\n            onChange: handleTextareaChange,\n            className: \"email-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"emails-submit btn-create\",\n            children: \"Save Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s(Setting, \"4QQzc2SfnrR1lENGi2hR4wYlhbE=\", false, function () {\n  return [useParams];\n});\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","Setting","_s","blogcategories","setBlogCategories","blogcategorydata","setBlogCategoryData","name","projectnameslist","setProjectNameList","projectname","setProjectName","type_name","dashboardname","setDashboardName","adminEmails","setAdminEmails","selectedAdminEmails","setSelectedAdminEmails","id","setting","setSetting","opptional_dasboard","activate_dasboard","responsible_emails","get","then","response","data","catch","error","console","split","status","log","handleCategoryChanges","e","target","value","handleProjectNameChanges","handleInputChange","prevState","handleToggleChange","updatedSetting","url","put","handleEmailChange","event","selectedId","selectedEmail","find","email","parseInt","includes","join","handleTextareaChange","updatedEmails","map","trim","handleSettingCreate","formData","postData","handleSubmit","post","handleSubmitData","type","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","length","categories","p_name","adminEmail","checked","_c","$RefreshReg$"],"sources":["C:/Others/msc-pont-admin-website/pont-admin-dashboard/src/components/Settings/Setting.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './SettingsStyle.css';\r\n\r\nconst Setting = () => {\r\n    const [blogcategories, setBlogCategories] = useState([]);\r\n    const [blogcategorydata, setBlogCategoryData] = useState({ name: '' });\r\n    const [projectnameslist, setProjectNameList] = useState([]);\r\n    const [projectname, setProjectName] = useState({ type_name: '' });\r\n    const [dashboardname, setDashboardName] = useState({ name: '' });\r\n    const [adminEmails, setAdminEmails] = useState([]);\r\n    const [selectedAdminEmails, setSelectedAdminEmails] = useState([]);\r\n    const { id } = useParams();\r\n    const [setting, setSetting] = useState({\r\n        opptional_dasboard: '',\r\n        activate_dasboard: false,\r\n        responsible_emails: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get('http://127.0.0.1:8000/api/category/view/')\r\n            .then(response => setBlogCategories(response.data))\r\n            .catch(error => console.error('Error fetching Blog categories:', error));\r\n\r\n        axios.get('http://127.0.0.1:8000/api/project-type/views')\r\n            .then(response => setProjectNameList(response.data))\r\n            .catch(error => console.error('Error fetching project types names:', error));\r\n\r\n        axios.get(`http://127.0.0.1:8000/api/settings/${id}/`)\r\n            .then(response => {\r\n                setSelectedAdminEmails(response.data.responsible_emails.split(', '));\r\n                setSetting(response.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 404) {\r\n                    setSetting({\r\n                        opptional_dasboard: '',\r\n                        activate_dasboard: false,\r\n                        responsible_emails: '',\r\n                    });\r\n                } else {\r\n                    console.log('Error fetching settings:', error);\r\n                }\r\n            });\r\n\r\n        axios.get('http://127.0.0.1:8000/api/users/emails/')\r\n            .then(response => setAdminEmails(response.data))\r\n            .catch(error => console.log('Error fetching admin emails:', error));\r\n    }, [id]);\r\n\r\n    const handleCategoryChanges = (e) => {\r\n        setBlogCategoryData({\r\n            ...blogcategorydata,\r\n            name: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleProjectNameChanges = (e) => {\r\n        setProjectName({\r\n            ...projectname,\r\n            type_name: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSetting(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleToggleChange = () => {\r\n        const updatedSetting = {\r\n            ...setting,\r\n            activate_dasboard: !setting.activate_dasboard\r\n        };\r\n\r\n        setSetting(updatedSetting);\r\n\r\n        const url = `http://127.0.0.1:8000/api/settings/${id}/`;\r\n\r\n        axios.put(url, updatedSetting)\r\n            .then(response => {\r\n                setSetting(response.data);\r\n                console.log('Dashboard activation status updated successfully');\r\n            })\r\n            .catch(error => console.log('Error updating dashboard activation status:', error));\r\n    };\r\n\r\n    const handleEmailChange = (event) => {\r\n        const selectedId = event.target.value;\r\n        const selectedEmail = adminEmails.find(email => email.id === parseInt(selectedId));\r\n\r\n        if (selectedEmail && !selectedAdminEmails.includes(selectedEmail.email)) {\r\n            setSelectedAdminEmails([...selectedAdminEmails, selectedEmail.email]);\r\n            setSetting(prevState => ({\r\n                ...prevState,\r\n                responsible_emails: [...selectedAdminEmails, selectedEmail.email].join(', ')\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleTextareaChange = (e) => {\r\n        const updatedEmails = e.target.value.split(', ').map(email => email.trim());\r\n        setSelectedAdminEmails(updatedEmails);\r\n        setSetting(prevState => ({\r\n            ...prevState,\r\n            responsible_emails: updatedEmails.join(', ')\r\n        }));\r\n    };\r\n\r\n    const handleSettingCreate = (formData) => {\r\n        const postData = {\r\n            opptional_dasboard: formData.opptional_dasboard || '',\r\n            activate_dasboard: formData.activate_dasboard,\r\n            responsible_emails: formData.responsible_emails || '',\r\n        };\r\n        return postData;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const url = `http://127.0.0.1:8000/api/settings/${id}/`;\r\n        axios.get(url)\r\n            .then(response => {\r\n                axios.put(url, setting)\r\n                    .then(response => setSetting(response.data))\r\n                    .catch(error => console.log('Error updating settings:', error));\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 404) {\r\n                    const postData = handleSettingCreate(setting);\r\n                    axios.post(url, postData)\r\n                        .then(response => setSetting(response.data))\r\n                        .catch(error => console.log('Error creating settings:', error));\r\n                } else {\r\n                    console.log('Error fetching settings:', error);\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleSubmitData = (e, type) => {\r\n        e.preventDefault();\r\n        if (type === 'category') {\r\n            axios.post('http://127.0.0.1:8000/api/category/create/', blogcategorydata)\r\n                .then(response => {\r\n                    alert(\"Category created successfully\");\r\n                    setBlogCategoryData({ name: '' });\r\n                    setBlogCategories([...blogcategories, response.data]);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error creating Category:', error);\r\n                    alert(\"Error creating Category\");\r\n                });\r\n        } else if (type === 'project') {\r\n            axios.post('http://127.0.0.1:8000/api/project-type/create/', projectname)\r\n                .then(response => {\r\n                    alert(\"Project Name created successfully\");\r\n                    setProjectName({ type_name: '' });\r\n                    setProjectNameList([...projectnameslist, response.data]);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error creating Project Name:', error);\r\n                    alert(\"Error creating Project Name\");\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"setting-page\">\r\n            <div className=\"setting-header\">\r\n                <h1>Setting</h1>\r\n            </div>\r\n            <div className='setting-body'>\r\n                <div className='setting-section'>\r\n                    <div className='setting-section-input'>\r\n                        <label>Insert Category name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Blog_category\"\r\n                            value={blogcategorydata.name}\r\n                            onChange={handleCategoryChanges}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={(e) => handleSubmitData(e, 'category')}\r\n                            className='btn-create'\r\n                        >\r\n                            Create Category\r\n                        </button>\r\n                    </div>\r\n                    <div className='setting-section-view'>\r\n                        <h5>All Categories</h5>\r\n                        <div className='setting-section-list'>\r\n                            {blogcategories.length === 0 ? (\r\n                                <div className=\"no-posts\">No About Page created yet!!</div>\r\n                            ) : (\r\n                                blogcategories.map(categories => (\r\n                                    <p key={categories.id}>{categories.name}</p>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='setting-section'>\r\n                    <div className='setting-section-input'>\r\n                        <label>Insert Projects name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Project_Name\"\r\n                            value={projectname.type_name}\r\n                            onChange={handleProjectNameChanges}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={(e) => handleSubmitData(e, 'project')}\r\n                            className='btn-create'\r\n                        >\r\n                            Create Project Name\r\n                        </button>\r\n                    </div>\r\n                    <div className='setting-section-view'>\r\n                        <h5>All Categories</h5>\r\n                        <div className='setting-section-list'>\r\n                            {projectnameslist.length === 0 ? (\r\n                                <div className=\"no-posts\">No Project Name created yet!!</div>\r\n                            ) : (\r\n                                projectnameslist.map(p_name => (\r\n                                    <p key={p_name.id}>{p_name.type_name}</p>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='setting-section'>\r\n                    <div className='setting-section-input'>\r\n                        <label>New Dashboard Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"opptional_dasboard\"\r\n                            value={setting.opptional_dasboard}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <button onClick={handleSubmit} className='btn-create'>\r\n                            Save Dashboard\r\n                        </button>\r\n\r\n                        <label className='email-list-title'>Admin Emails</label>\r\n                        <select\r\n                            name=\"admin\"\r\n                            value=\"\"\r\n                            onChange={handleEmailChange}\r\n                            className='dropdown-list'\r\n                        >\r\n                            <option value=\"\">Select an email</option>\r\n                            {adminEmails.map(adminEmail => (\r\n                                <option key={adminEmail.id} value={adminEmail.id}>{adminEmail.email}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className='setting-section-view'>\r\n                        <h5>Activate New Dashboard</h5>\r\n                        <div className='setting-section-list'>\r\n                            <label className=\"switch\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={setting.activate_dasboard}\r\n                                    onChange={handleToggleChange}\r\n                                />\r\n                                <span className=\"slider round\"></span>\r\n                            </label>\r\n                        </div>\r\n                        <h5 className='email-list-title'>Selected Emails</h5>\r\n                        <textarea\r\n                            value={selectedAdminEmails.join(', ')}\r\n                            onChange={handleTextareaChange}\r\n                            className=\"email-textarea\"\r\n                        />\r\n                        <button onClick={handleSubmit} className='emails-submit btn-create'>\r\n                            Save Emails\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Setting;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}