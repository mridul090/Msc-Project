{"ast":null,"code":"var _jsxFileName = \"C:\\\\Others\\\\msc-pont-admin-website\\\\pont-admin-dashboard\\\\src\\\\components\\\\Settings\\\\Setting.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './SettingsStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Setting = () => {\n  _s();\n  const [blogcategories, setBlogCategories] = useState([]);\n  const [blogcategorydata, setBlogCategoryData] = useState({\n    name: ''\n  });\n  const [projectnameslist, setProjectNameList] = useState([]);\n  const [projectname, setProjectName] = useState({\n    type_name: ''\n  });\n  const [dashboardname, setDashboardName] = useState({\n    name: ''\n  });\n  const [adminEmails, setAdminEmails] = useState([]);\n  const [selectedAdminEmails, setSelectedAdminEmails] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [settingsaved_data, setSavedsettingdata] = useState([]);\n  const [setting, setSetting] = useState({\n    opptional_dasboard: '',\n    activate_dasboard: false,\n    responsible_emails: ''\n  });\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/category/view/').then(response => {\n      setBlogCategories(response.data);\n    }).catch(error => {\n      console.error('Error fetching Blog categories:', error);\n    });\n    axios.get('http://127.0.0.1:8000/api/project-type/views').then(response => {\n      console.log(\"project types data\", response.data);\n      setProjectNameList(response.data);\n    }).catch(error => {\n      console.error('Error fetching project types names:', error);\n    });\n    axios.get(`http://127.0.0.1:8000/api/settings/${id}/`).then(response => {\n      setSavedsettingdata(response.data);\n      setSelectedAdminEmails(response.data.responsible_emails.split(', '));\n      setSetting(response.data);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        // If no settings record exists, initialize with default values\n        setSetting({\n          opptional_dasboard: '',\n          activate_dasboard: false,\n          responsible_emails: ''\n        });\n      } else {\n        console.log('Error fetching settings:', error);\n      }\n    });\n    axios.get('http://127.0.0.1:8000/api/users/emails/').then(response => {\n      setAdminEmails(response.data);\n    }).catch(error => {\n      console.log('Error fetching admin emails:', error);\n    });\n  }, [id]);\n  const handleCategoryChanges = e => {\n    setBlogCategoryData({\n      ...blogcategorydata,\n      name: e.target.value\n    });\n  };\n  const handleProjectNameChanges = e => {\n    setProjectName({\n      ...projectname,\n      type_name: e.target.value\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSetting(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleToggleChange = () => {\n    setSetting(prevState => ({\n      ...prevState,\n      activate_dasboard: !prevState.activate_dasboard\n    }));\n    // handleSubmit();\n  };\n  const handleEmailChange = event => {\n    const selectedId = event.target.value;\n    const selectedEmail = adminEmails.find(email => email.id === parseInt(selectedId));\n    if (selectedEmail && !selectedAdminEmails.includes(selectedEmail.email)) {\n      setSelectedAdminEmails([...selectedAdminEmails, selectedEmail.email]);\n      setSetting(prevState => ({\n        ...prevState,\n        responsible_emails: [...selectedAdminEmails, selectedEmail.email].join(', ')\n      }));\n    }\n  };\n  const handleSettingCreate = formData => {\n    const postData = {\n      opptional_dasboard: formData.opptional_dasboard || '',\n      activate_dasboard: formData.activate_dasboard,\n      responsible_emails: formData.responsible_emails || ''\n    };\n    return postData;\n  };\n  const handleSubmit = () => {\n    const url = `http://127.0.0.1:8000/api/settings/${id}/`;\n    axios.get(url).then(response => {\n      console.log(\"update operation work\");\n      axios.put(url, setting).then(response => {\n        setSetting(response.data);\n        alert('Settings updated successfully');\n      }).catch(error => {\n        console.log('Error updating settings:', error);\n      });\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        console.log(\"create operation work\");\n        console.log(\"the setting data is\", setting);\n        const postData = handleSettingCreate(setting);\n        console.log(\"the postData data is\", postData);\n        axios.post(url, postData).then(response => {\n          setSetting(response.data);\n          alert('Settings created successfully');\n        }).catch(error => {\n          console.log('Error creating settings:', error);\n        });\n      } else {\n        console.log('Error fetching settings:', error);\n      }\n    });\n  };\n\n  // const handleSubmit = () => {\n  //     const method = settingsaved_data.id ? 'PUT' : 'POST';\n  //     const url = `http://127.0.0.1:8000/api/settings/${id}/`;\n\n  //     axios({\n  //         method: method,\n  //         url: url,\n  //         data: setting\n  //     })\n  //         .then(response => {\n  //             setSetting(response.data);\n  //             alert('Settings saved successfully');\n  //         })\n  //         .catch(error => {\n  //             console.log('Error saving settings:', error);\n  //         });\n  // };\n\n  const handleSubmitData = (e, type) => {\n    e.preventDefault();\n    if (type === 'category') {\n      axios.post('http://127.0.0.1:8000/api/category/create/', blogcategorydata).then(response => {\n        alert(\"Category created successfully\");\n        setBlogCategoryData({\n          name: ''\n        });\n        setBlogCategories([...blogcategories, response.data]);\n      }).catch(error => {\n        console.error('Error creating Category:', error);\n        alert(\"Error creating Category\");\n      });\n    } else if (type === 'project') {\n      axios.post('http://127.0.0.1:8000/api/project-type/create/', projectname).then(response => {\n        alert(\"Project Name created successfully\");\n        setProjectName({\n          type_name: ''\n        });\n        setProjectNameList([...projectnameslist, response.data]);\n      }).catch(error => {\n        console.error('Error creating Project Name:', error);\n        alert(\"Error creating Project Name\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Insert Category name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Blog_category\",\n            value: blogcategorydata.name,\n            onChange: handleCategoryChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmitData(e, 'category'),\n            className: \"btn-create\",\n            children: \"Create Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-section-list\",\n            children: blogcategories.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-posts\",\n              children: \"No About Page created yet!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this) : blogcategories.map(categories => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: categories.name\n            }, categories.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Insert Projects name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Project_Name\",\n            value: projectname.type_name,\n            onChange: handleProjectNameChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmitData(e, 'project'),\n            className: \"btn-create\",\n            children: \"Create Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-section-list\",\n            children: projectnameslist.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-posts\",\n              children: \"No Project Name created yet!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this) : projectnameslist.map(p_name => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: p_name.type_name\n            }, p_name.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Dashboard Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"opptional_dasboard\",\n            value: setting.opptional_dasboard,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"btn-create\",\n            children: \"Save Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"email-list-title\",\n            children: \"Admin Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"admin\",\n            value: \"\",\n            onChange: handleEmailChange,\n            className: \"dropdown-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), adminEmails.map(adminEmail => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: adminEmail.id,\n              children: adminEmail.email\n            }, adminEmail.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-section-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Activate New Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-section-list\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: setting.activate_dasboard,\n                onChange: handleToggleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"email-list-title\",\n            children: \"Selected Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: selectedAdminEmails.join(', '),\n            readOnly: true,\n            className: \"email-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"emails-submit btn-create\",\n            children: \"Save Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n};\n_s(Setting, \"VElf4i8lIBaeFTASmLRvd4LFkW8=\", false, function () {\n  return [useParams];\n});\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","Setting","_s","blogcategories","setBlogCategories","blogcategorydata","setBlogCategoryData","name","projectnameslist","setProjectNameList","projectname","setProjectName","type_name","dashboardname","setDashboardName","adminEmails","setAdminEmails","selectedAdminEmails","setSelectedAdminEmails","id","settingsaved_data","setSavedsettingdata","setting","setSetting","opptional_dasboard","activate_dasboard","responsible_emails","get","then","response","data","catch","error","console","log","split","status","handleCategoryChanges","e","target","value","handleProjectNameChanges","handleInputChange","prevState","handleToggleChange","handleEmailChange","event","selectedId","selectedEmail","find","email","parseInt","includes","join","handleSettingCreate","formData","postData","handleSubmit","url","put","alert","post","handleSubmitData","type","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","length","map","categories","p_name","adminEmail","checked","readOnly","_c","$RefreshReg$"],"sources":["C:/Others/msc-pont-admin-website/pont-admin-dashboard/src/components/Settings/Setting.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './SettingsStyle.css';\r\n\r\nconst Setting = () => {\r\n    const [blogcategories, setBlogCategories] = useState([]);\r\n    const [blogcategorydata, setBlogCategoryData] = useState({\r\n        name: '',\r\n    });\r\n\r\n    const [projectnameslist, setProjectNameList] = useState([]);\r\n    const [projectname, setProjectName] = useState({\r\n        type_name: '',\r\n    });\r\n    const [dashboardname, setDashboardName] = useState({\r\n        name: '',\r\n    });\r\n    const [adminEmails, setAdminEmails] = useState([]);\r\n    const [selectedAdminEmails, setSelectedAdminEmails] = useState([]);\r\n    const { id } = useParams();\r\n    const [settingsaved_data, setSavedsettingdata] = useState([]);\r\n    const [setting, setSetting] = useState({\r\n        opptional_dasboard: '',\r\n        activate_dasboard: false,\r\n        responsible_emails: '',\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://127.0.0.1:8000/api/category/view/')\r\n            .then(response => {\r\n                setBlogCategories(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching Blog categories:', error);\r\n            });\r\n\r\n        axios.get('http://127.0.0.1:8000/api/project-type/views')\r\n            .then(response => {\r\n                console.log(\"project types data\", response.data);\r\n                setProjectNameList(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching project types names:', error);\r\n            });\r\n\r\n            axios.get(`http://127.0.0.1:8000/api/settings/${id}/`)\r\n            .then(response => {\r\n                setSavedsettingdata(response.data);\r\n                setSelectedAdminEmails(response.data.responsible_emails.split(', '));\r\n                setSetting(response.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 404) {\r\n                    // If no settings record exists, initialize with default values\r\n                    setSetting({\r\n                        opptional_dasboard: '',\r\n                        activate_dasboard: false,\r\n                        responsible_emails: '',\r\n                    });\r\n                } else {\r\n                    console.log('Error fetching settings:', error);\r\n                }\r\n            });\r\n\r\n        axios.get('http://127.0.0.1:8000/api/users/emails/')\r\n            .then(response => {\r\n                setAdminEmails(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching admin emails:', error);\r\n            });\r\n    }, [id]);\r\n\r\n\r\n    const handleCategoryChanges = (e) => {\r\n        setBlogCategoryData({\r\n            ...blogcategorydata,\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    const handleProjectNameChanges = (e) => {\r\n        setProjectName({\r\n            ...projectname,\r\n            type_name: e.target.value\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSetting(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleToggleChange = () => {\r\n        setSetting(prevState => ({\r\n            ...prevState,\r\n            activate_dasboard: !prevState.activate_dasboard\r\n        }));\r\n        // handleSubmit();\r\n    };\r\n\r\n    const handleEmailChange = (event) => {\r\n        const selectedId = event.target.value;\r\n        const selectedEmail = adminEmails.find(email => email.id === parseInt(selectedId));\r\n\r\n        if (selectedEmail && !selectedAdminEmails.includes(selectedEmail.email)) {\r\n            setSelectedAdminEmails([...selectedAdminEmails, selectedEmail.email]);\r\n            setSetting(prevState => ({\r\n                ...prevState,\r\n                responsible_emails: [...selectedAdminEmails, selectedEmail.email].join(', ')\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSettingCreate = (formData) => {\r\n        const postData = {\r\n            opptional_dasboard: formData.opptional_dasboard || '',\r\n            activate_dasboard: formData.activate_dasboard,\r\n            responsible_emails: formData.responsible_emails || '',  \r\n        };\r\n        return postData;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const url = `http://127.0.0.1:8000/api/settings/${id}/`;\r\n    \r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(\"update operation work\")\r\n                axios.put(url, setting)\r\n                    .then(response => {\r\n                        setSetting(response.data);\r\n                        alert('Settings updated successfully');\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('Error updating settings:', error);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 404) {\r\n                    console.log(\"create operation work\");\r\n                    console.log(\"the setting data is\", setting)\r\n                    const postData = handleSettingCreate(setting);\r\n                    console.log(\"the postData data is\", postData)\r\n                    axios.post(url, postData)\r\n                        .then(response => {\r\n                            setSetting(response.data);\r\n                            alert('Settings created successfully');\r\n                        })\r\n                        .catch(error => {\r\n                            console.log('Error creating settings:', error);\r\n                        });\r\n                } else {\r\n                    console.log('Error fetching settings:', error);\r\n                }\r\n            });\r\n    };\r\n    \r\n    \r\n\r\n    // const handleSubmit = () => {\r\n    //     const method = settingsaved_data.id ? 'PUT' : 'POST';\r\n    //     const url = `http://127.0.0.1:8000/api/settings/${id}/`;\r\n        \r\n    //     axios({\r\n    //         method: method,\r\n    //         url: url,\r\n    //         data: setting\r\n    //     })\r\n    //         .then(response => {\r\n    //             setSetting(response.data);\r\n    //             alert('Settings saved successfully');\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log('Error saving settings:', error);\r\n    //         });\r\n    // };\r\n\r\n    const handleSubmitData = (e, type) => {\r\n        \r\n        e.preventDefault();\r\n        if (type === 'category') {\r\n            axios.post('http://127.0.0.1:8000/api/category/create/', blogcategorydata)\r\n                .then(response => {\r\n                    alert(\"Category created successfully\");\r\n                    setBlogCategoryData({ name: '' });\r\n                    setBlogCategories([...blogcategories, response.data]);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error creating Category:', error);\r\n                    alert(\"Error creating Category\");\r\n                });\r\n        } else if (type === 'project') {\r\n            axios.post('http://127.0.0.1:8000/api/project-type/create/', projectname)\r\n                .then(response => {\r\n                    alert(\"Project Name created successfully\");\r\n                    setProjectName({ type_name: '' });\r\n                    setProjectNameList([...projectnameslist, response.data]);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error creating Project Name:', error);\r\n                    alert(\"Error creating Project Name\");\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"setting-page\">\r\n            <div className=\"setting-header\">\r\n                <h1>Setting</h1>\r\n            </div>\r\n            <div className='setting-body'>\r\n\r\n                <div className='setting-section'>\r\n                    <div className='setting-section-input'>\r\n                        <label>Insert Category name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Blog_category\"\r\n                            value={blogcategorydata.name}\r\n                            onChange={handleCategoryChanges}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={(e) => handleSubmitData(e, 'category')}\r\n                            className='btn-create'\r\n                        >\r\n                            Create Category\r\n                        </button>\r\n                    </div>\r\n                    <div className='setting-section-view'>\r\n                        <h5>All Categories</h5>\r\n                        <div className='setting-section-list'>\r\n                            {blogcategories.length === 0 ? (\r\n                                <div className=\"no-posts\">No About Page created yet!!</div>\r\n                            ) : (blogcategories.map(categories => (\r\n                                <p key={categories.id}>{categories.name}</p>\r\n                            )))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='setting-section'>\r\n                    <div className='setting-section-input'>\r\n                        <label>Insert Projects name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Project_Name\"\r\n                            value={projectname.type_name}\r\n                            onChange={handleProjectNameChanges}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={(e) => handleSubmitData(e, 'project')}\r\n                            className='btn-create'\r\n                        >\r\n                            Create Project Name\r\n                        </button>\r\n                    </div>\r\n                    <div className='setting-section-view'>\r\n                        <h5>All Categories</h5>\r\n                        <div className='setting-section-list'>\r\n                            {projectnameslist.length === 0 ? (\r\n                                <div className=\"no-posts\">No Project Name created yet!!</div>\r\n                            ) : (projectnameslist.map(p_name => (\r\n                                <p key={p_name.id}>{p_name.type_name}</p>\r\n                            )))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='setting-section'>\r\n                    <div className='setting-section-input'>\r\n                        <label>New Dashboard Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"opptional_dasboard\"\r\n                            value={setting.opptional_dasboard}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <button onClick={handleSubmit} className='btn-create'>\r\n                            Save Dashboard\r\n                        </button>\r\n\r\n                        <label className='email-list-title'>Admin Emails</label>\r\n                        <select\r\n                            name=\"admin\"\r\n                            value=\"\"\r\n                            onChange={handleEmailChange}\r\n                            className='dropdown-list'\r\n                        >\r\n                            <option value=\"\">Select an email</option>\r\n                            {adminEmails.map(adminEmail => (\r\n                                <option key={adminEmail.id} value={adminEmail.id}>{adminEmail.email}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className='setting-section-view'>\r\n                        <h5>Activate New Dashboard</h5>\r\n                        <div className='setting-section-list'>\r\n                            <label className=\"switch\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={setting.activate_dasboard}\r\n                                    onChange={handleToggleChange}\r\n                                />\r\n                                <span className=\"slider round\"></span>\r\n                            </label>\r\n                        </div>\r\n                        <h5 className='email-list-title'>Selected Emails</h5>\r\n                        <textarea\r\n                            value={selectedAdminEmails.join(', ')}\r\n                            readOnly\r\n                            className=\"email-textarea\"\r\n                        />\r\n                        <button onClick={handleSubmit} className='emails-submit btn-create'>\r\n                            Save Emails\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Setting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}