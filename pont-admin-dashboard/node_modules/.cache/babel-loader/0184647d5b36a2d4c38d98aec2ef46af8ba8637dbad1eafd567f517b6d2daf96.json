{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst useCheckUser = () => {\n  _s();\n  const [isValidUser, setIsValidUser] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [users, setUser] = useState({});\n  useEffect(() => {\n    const fetchUser = async () => {\n      const token = localStorage.getItem('token');\n      console.log(\"stored token is \", token);\n      const loginuser = localStorage.getItem('user');\n      console.log(\"User Data is \", loginuser);\n      if (token != null && !token) {\n        const loginuser = localStorage.getItem('user');\n        console.log(\"User Data is \", loginuser);\n        setUser(loginuser);\n        setIsValidUser(true);\n      } else {\n        console.log(\"The token is \", token);\n        setIsValidUser(false);\n        setError('Failed to load user data');\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n\n      // try {\n      //   const response = await axios.get('http://localhost:8000/api/current-user/', {\n      //     headers: {\n      //       Authorization: `Bearer ${token}`,\n      //     },          \n      //   });\n      //   setUser(response.data);\n      //   setIsValidUser(true);\n      // } catch (error) {\n      //   console.error('Error fetching user data:', error);\n      //   setError('Failed to load user data');\n      //   setIsValidUser(false);\n      //   if (error.response && error.response.status === 401) {\n      //     localStorage.removeItem('token');\n      //     navigate('/login');\n      //   }\n      // }\n    };\n    fetchUser();\n  }, [navigate]);\n  return {\n    isValidUser,\n    error,\n    users\n  };\n};\n_s(useCheckUser, \"D/Gl+3LAs36RE2iS5wQfQaBniw0=\", false, function () {\n  return [useNavigate];\n});\nexport default useCheckUser;","map":{"version":3,"names":["useEffect","useState","useNavigate","useCheckUser","_s","isValidUser","setIsValidUser","error","setError","navigate","users","setUser","fetchUser","token","localStorage","getItem","console","log","loginuser","removeItem"],"sources":["C:/Others/Msc Project/pont-admin-dashboard/src/components/Users/checkuser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useCheckUser = () => {\r\n  const [isValidUser, setIsValidUser] = useState(null); \r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const [users, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      console.log(\"stored token is \", token);\r\n      const loginuser = localStorage.getItem('user');\r\n      console.log(\"User Data is \", loginuser);\r\n\r\n      if( token != null && !token){\r\n        const loginuser = localStorage.getItem('user');\r\n        console.log(\"User Data is \", loginuser);\r\n        setUser(loginuser);\r\n        setIsValidUser(true);\r\n      }\r\n      else{\r\n        console.log(\"The token is \", token);\r\n        setIsValidUser(false);\r\n        setError('Failed to load user data');\r\n        localStorage.removeItem('token');\r\n        navigate('/login');\r\n      }\r\n     \r\n      // try {\r\n      //   const response = await axios.get('http://localhost:8000/api/current-user/', {\r\n      //     headers: {\r\n      //       Authorization: `Bearer ${token}`,\r\n      //     },          \r\n      //   });\r\n      //   setUser(response.data);\r\n      //   setIsValidUser(true);\r\n      // } catch (error) {\r\n      //   console.error('Error fetching user data:', error);\r\n      //   setError('Failed to load user data');\r\n      //   setIsValidUser(false);\r\n      //   if (error.response && error.response.status === 401) {\r\n      //     localStorage.removeItem('token');\r\n      //     navigate('/login');\r\n      //   }\r\n      // }\r\n\r\n    };\r\n\r\n    fetchUser();\r\n  }, [navigate]);\r\n\r\n  return { isValidUser, error, users};\r\n}\r\n\r\nexport default useCheckUser;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAAC;MACtC,MAAMK,SAAS,GAAGJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,SAAS,CAAC;MAEvC,IAAIL,KAAK,IAAI,IAAI,IAAI,CAACA,KAAK,EAAC;QAC1B,MAAMK,SAAS,GAAGJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,SAAS,CAAC;QACvCP,OAAO,CAACO,SAAS,CAAC;QAClBZ,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,MACG;QACFU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,KAAK,CAAC;QACnCP,cAAc,CAAC,KAAK,CAAC;QACrBE,QAAQ,CAAC,0BAA0B,CAAC;QACpCM,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;QAChCV,QAAQ,CAAC,QAAQ,CAAC;MACpB;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEJ,WAAW;IAAEE,KAAK;IAAEG;EAAK,CAAC;AACrC,CAAC;AAAAN,EAAA,CAnDKD,YAAY;EAAA,QAGCD,WAAW;AAAA;AAkD9B,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}