{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst useCheckUser = () => {\n  _s();\n  const [isValidUser, setIsValidUser] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   const fetchUser = async () => {\n  //     // try {\n  //     //   const response = await axios.get('http://localhost:8000/api/current-user/', {\n  //     //     headers: {\n  //     //       Authorization: `Bearer ${token}`,\n  //     //     },          \n  //     //   });\n  //     //   setUser(response.data);\n  //     //   setIsValidUser(true);\n  //     // } catch (error) {\n  //     //   console.error('Error fetching user data:', error);\n  //     //   setError('Failed to load user data');\n  //     //   setIsValidUser(false);\n  //     //   if (error.response && error.response.status === 401) {\n  //     //     localStorage.removeItem('token');\n  //     //     navigate('/login');\n  //     //   }\n  //     // }\n\n  //   };\n\n  //   fetchUser();\n  // }, [navigate]);\n\n  return {\n    isValidUser,\n    error\n  };\n};\n_s(useCheckUser, \"57PGc/6hvgDoDZ0rF/yOPfey3sE=\", false, function () {\n  return [useNavigate];\n});\nexport default useCheckUser;","map":{"version":3,"names":["useEffect","useState","useNavigate","useCheckUser","_s","isValidUser","setIsValidUser","error","setError","navigate"],"sources":["C:/Others/Msc Project/pont-admin-dashboard/src/components/Users/checkuser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useCheckUser = () => {\r\n  const [isValidUser, setIsValidUser] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   const fetchUser = async () => {\r\n  //     // try {\r\n  //     //   const response = await axios.get('http://localhost:8000/api/current-user/', {\r\n  //     //     headers: {\r\n  //     //       Authorization: `Bearer ${token}`,\r\n  //     //     },          \r\n  //     //   });\r\n  //     //   setUser(response.data);\r\n  //     //   setIsValidUser(true);\r\n  //     // } catch (error) {\r\n  //     //   console.error('Error fetching user data:', error);\r\n  //     //   setError('Failed to load user data');\r\n  //     //   setIsValidUser(false);\r\n  //     //   if (error.response && error.response.status === 401) {\r\n  //     //     localStorage.removeItem('token');\r\n  //     //     navigate('/login');\r\n  //     //   }\r\n  //     // }\r\n\r\n\r\n  //   };\r\n\r\n  //   fetchUser();\r\n  // }, [navigate]);\r\n\r\n  return { isValidUser, error };\r\n}\r\n\r\nexport default useCheckUser;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;;EAEA,OAAO;IAAEG,WAAW;IAAEE;EAAM,CAAC;AAC/B,CAAC;AAAAH,EAAA,CAhCKD,YAAY;EAAA,QAGCD,WAAW;AAAA;AA+B9B,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}